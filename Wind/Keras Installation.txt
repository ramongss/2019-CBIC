# Conda

Install Anaconda3-4.2.0-Windows-x86_64 with python 3.5 FROM https://repo.continuum.io/archive/ --> Python 3.5 vai ser instalado a medida que o Anaconda 3-4.2 for instalado

# R Build Tools

Install R Tools in: C:\RBuildTools, where C:\ is the local drive where the windows is installed

# In R

install.packages("Rcpp")
install.packages("devtools")
install.packages("curl")
install.packages("rlang")
install.packages("purrr")
install.packages("rstudioapi")
devtools::install_github("rstudio/reticulate", force=TRUE)
devtools::install_github("r-lib/processx")
library(processx)
devtools::install_github("rstudio/tensorflow")
devtools::install_github("rstudio/keras")

# In Conda

conda update python
conda update anaconda
conda update python

#Aqui talvez precise reiniciar o pc
# In R
library(keras)
install_keras()

# Example

library(keras)
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y

x_train <- array_reshape(x_train, c(nrow(x_train), 784))
x_test <- array_reshape(x_test, c(nrow(x_test), 784))

x_train <- x_train / 255
x_test <- x_test / 255

y_train <- to_categorical(y_train, 10)
y_test <- to_categorical(y_test, 10)

model <- keras_model_sequential() 
model %>% 
  layer_dense(units = 256, activation = 'relu', input_shape = c(784)) %>% 
  layer_dropout(rate = 0.4) %>% 
  layer_dense(units = 128, activation = 'relu') %>%
  layer_dropout(rate = 0.3) %>%
  layer_dense(units = 10, activation = 'softmax')

summary(model)

model %>% compile(
  loss = 'categorical_crossentropy',
  optimizer = optimizer_rmsprop(),
  metrics = c('accuracy')
)

history <- model %>% fit(
  x_train, y_train, 
  epochs = 30, batch_size = 128, 
  validation_split = 0.2
)

plot(history)

model %>% evaluate(x_test, y_test)
model %>% predict_classes(x_test)